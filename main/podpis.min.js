async function getDriverId(){if(!currentUserId)return null;try{const userDoc=await db.collection("users").doc(currentUserId).get();return userDoc.exists?userDoc.data().driverId:(console.error("User document does not exist."),null)}catch(error){return console.error("Error fetching user data:",error),null}}async function requestDocumentGeneration(buttonElement,openModal=!0){var docItem=buttonElement.parentElement,generateFunction=docItem.getAttribute("data-generate-function"),progressBar=docItem.querySelector(".progress-bar"),progressContainer=docItem.querySelector(".progress-container"),generationMessage=docItem.querySelector(".generation-message");generationMessage.style.display="block",progressContainer.style.display="block";let progress=0;const progressInterval=setInterval((()=>{progress<100?(progress+=10,progressBar.style.width=progress+"%"):clearInterval(progressInterval)}),200);console.log("Generated document type:",generateFunction);var contractId=docItem.getAttribute("data-contract-id");const driverId=await getDriverId();driverId?fetch("https://us-central1-ccmcolorpartner.cloudfunctions.net/generateDocument",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({driverName:driverId,documentType:generateFunction})}).then((response=>response.json())).then((data=>{generationMessage.style.display="none",progressContainer.style.display="none",clearInterval(progressInterval),openModal&&openDocument(data.pdfUrl,contractId)})).catch((error=>{console.error("Error during document generation:",error),document.getElementById("error_step_4").textContent="Błąd podczas generowania dokumentu."})):console.error("Unable to get driverId.")}async function checkIfDocumentIsSigned(userId,docType){try{const docSnapshot=await db.collection("users").doc(userId).collection("dokumenty").doc(docType).get();return docSnapshot.exists&&docSnapshot.data().signed}catch(error){return console.error("Error checking document signature:",error),!1}}async function updateDocumentButtons(){const documents=["regulamin","zasadyWspolpracy","rodo"];for(const docType of documents){const isSigned=await checkIfDocumentIsSigned(currentUserId,docType),button=document.querySelector(`.document-item[data-contract-id="${docType}"] button`);isSigned?(button.textContent="Dokument podpisany",button.disabled=!0):(button.textContent="Generuj i otwórz",button.disabled=!1)}}function showGenerationProgress(){document.getElementById("documents-progress").style.display="block"}function hideGenerationProgress(){document.getElementById("documents-progress").style.display="none"}function openDocument(pdfUrl,contractId){var documentFrame=document.getElementById("document-frame"),signButton=document.getElementById("signButton");documentFrame.src=pdfUrl,currentContractId=contractId,signButton.style.display="block",document.getElementById("document-modal").style.display="block",signButton.textContent="Zatwierdź podpis",signButton.disabled=!1}function isInsideCanvas(e){let x,y;e.touches?(x=e.touches[0].clientX,y=e.touches[0].clientY):(x=e.clientX,y=e.clientY);let rect=canvas.getBoundingClientRect();return x>=rect.left&&x<=rect.right&&y>=rect.top&&y<=rect.bottom}let emptySignatureData,canvas=document.getElementById("signature-pad"),ctx=canvas.getContext("2d"),drawing=!1;function draw(e){if(!drawing)return;ctx.lineWidth=5,ctx.lineCap="round",ctx.strokeStyle="black";let rect=canvas.getBoundingClientRect();ctx.lineTo(e.clientX-rect.left,e.clientY-rect.top),ctx.stroke(),ctx.beginPath(),ctx.moveTo(e.clientX-canvas.offsetLeft,e.clientY-canvas.offsetTop)}async function checkIfDocumentIsSigned(userId,docType){try{const docSnapshot=await db.collection("users").doc(userId).collection("dokumenty").doc(docType).get();return docSnapshot.exists&&docSnapshot.data().signature}catch(error){return console.error("Error checking document signature:",error),!1}}async function saveSignature(){let signatureData=canvas.toDataURL(),docType=currentContractId;if(signatureData===emptySignatureData)return void console.error("No signature detected. Please sign before saving.");let byteCharacters=atob(signatureData.split(",")[1]),byteArrays=[];for(let offset=0;offset<byteCharacters.length;offset+=512){let slice=byteCharacters.slice(offset,offset+512),byteNumbers=new Array(slice.length);for(let i=0;i<slice.length;i++)byteNumbers[i]=slice.charCodeAt(i);let byteArray=new Uint8Array(byteNumbers);byteArrays.push(byteArray)}let blob=new Blob(byteArrays,{type:"image/png"}),signatureRef=firebase.storage().ref().child(`signatures/${currentUserId}/${docType}.png`);try{await signatureRef.put(blob);let signatureURL=await signatureRef.getDownloadURL();await db.collection("users").doc(currentUserId).collection("dokumenty").doc(docType).set({signature:signatureURL}),console.log("Signature saved successfully.");let signButton=document.getElementById("signButton");signButton.textContent="Dokument podpisany",signButton.disabled=!0,clearSignature();requestDocumentGeneration(document.querySelector(`[data-contract-id="${docType}"] button`),!1),closeDocumentModal()}catch(error){console.error("Error saving signature:",error)}await updateDocumentButtons()}function clearSignature(){ctx.clearRect(0,0,canvas.width,canvas.height),drawing=!1}function closeDocumentModal(){document.getElementById("document-modal").style.display="none"}async function areAllDocumentsSigned(){const documents=["regulamin","zasadyWspolpracy","rodo"];for(const docType of documents){if(!await checkIfDocumentIsSigned(currentUserId,docType))return!1}return!0}function disableScrolling(){let x=window.scrollX,y=window.scrollY;window.onscroll=function(){window.scrollTo(x,y)}}function enableScrolling(){window.onscroll=function(){}}window.onload=function(){emptySignatureData=canvas.toDataURL()},canvas.addEventListener("mousedown",(function(){drawing=!0,ctx.beginPath()})),canvas.addEventListener("mousemove",(function(e){isInsideCanvas(e)?draw(e):drawing=!1})),canvas.addEventListener("mouseup",(()=>drawing=!1)),canvas.addEventListener("mouseout",(()=>drawing=!1)),canvas.addEventListener("touchstart",(function(e){drawing=!0,ctx.beginPath();let rect=canvas.getBoundingClientRect();ctx.moveTo(e.touches[0].clientX-rect.left,e.touches[0].clientY-rect.top)})),canvas.addEventListener("touchmove",(function(e){if(!isInsideCanvas(e))return void(drawing=!1);if(!drawing)return;ctx.lineWidth=5,ctx.lineCap="round",ctx.strokeStyle="black";let rect=canvas.getBoundingClientRect();ctx.lineTo(e.touches[0].clientX-rect.left,e.touches[0].clientY-rect.top),ctx.stroke()})),canvas.addEventListener("touchend",(()=>drawing=!1));