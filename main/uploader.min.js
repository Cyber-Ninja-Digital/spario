exports.generateJPKVAT = functions.https.onRequest((request, response) => {
    corsHandler(request, response, async () => {
        if (request.method === 'OPTIONS') {
            // Этот блок будет обрабатывать предварительные запросы (pre-flight).
            response.set('Access-Control-Allow-Methods', 'POST');
            response.set('Access-Control-Allow-Headers', 'Content-Type');
            response.set('Access-Control-Allow-Origin', 'https://www.panel-color.pl');
            response.status(204).send('');
            return;
        }
        
        try {
            console.log("Received request:", request.body);

            // Проверка на наличие параметра месяца в запросе
            if (!request.body.month || !request.body.year) {
                console.warn("Year and Month parameters are required in request.");
                response.status(400).send('Year and Month parameters are required');
                return;
            }

            // Генерация XML для продаж и покупок на основе указанного месяца
            const salesXML = await generateXMLForSales(request.body.year, request.body.month);

            const combinedXML = salesXML;


            // Сохранение XML в Firebase Storage и получение URL
            const fileURL = await saveXMLToStorage(combinedXML, request.body.year, request.body.month);

            // Добавьте запись в Firestore с метаданными о созданном файле
            const month = request.body.month;
            const year = request.body.year;
            const docId = `${year}-${month}`; 

            console.log("Saving metadata to Firestore...");
            await admin.firestore()
                .collection('finance')
                .doc(docId)
                .collection('jpk_reports')
                .add({
                    generationDate: new Date(),
                    month: month,
                    year: year,
                    fileURL: fileURL
                });
            
            console.log("JPK VAT generation and save completed successfully.");
            // Вернуть URL созданного файла как часть ответа
            response.status(200).json({ fileURL });

        } catch (error) {
            console.error('Error generating JPK VAT:', error);
            response.status(500).send('Internal server error');
        }
    });
});
const generateXMLForSales = async (year, month) => {
    let xml = '<?xml version="1.0" encoding="UTF-8"?>\n<JPK>\n';
    const path = `${year}-${month}`;
    
    console.log(`Fetching sales data from Firestore at path: finance/${path}/przychody`);
    const sprzedazRef = admin.firestore().collection('finance').doc(path).collection('przychody');
    
    console.log(`Fetching purchases data from Firestore at path: finance/${path}/wydatki`);
    const zakupRef = admin.firestore().collection('finance').doc(path).collection('wydatki');
    
    const zakupSnapshot = await zakupRef.get();
    const sprzedazSnapshot = await sprzedazRef.get();
    
    if (sprzedazSnapshot.empty) {
        console.log('No sales data found for the given month/year.');
    } else {
        console.log(`Fetched ${sprzedazSnapshot.size} sales records.`);
    }
    
    if (zakupSnapshot.empty) {
        console.log('No purchases data found for the given month/year.');
    } else {
        console.log(`Fetched ${zakupSnapshot.size} purchase records.`);
    }
    
    if (sprzedazSnapshot.empty && zakupSnapshot.empty) {
        console.log('No sales or purchases data found for the given month/year.');
        return xml + '</JPK>';
    }
    
    // Добавить заголовок и информацию о фирме
    xml += `
    <Naglowek>
        <KodFormularza kodSystemowy="JPK_VAT (3)" wersjaSchemy="1-1">JPK_VAT</KodFormularza>
        <WariantFormularza>1</WariantFormularza>
        <CelZlozenia>1</CelZlozenia>
        <DataWytworzeniaJPK>${new Date().toISOString()}</DataWytworzeniaJPK>
        <DataOd>${year}-${month}-01</DataOd>
        <DataDo>${year}-${month}-${new Date(year, month, 0).getDate()}</DataDo>
    </Naglowek>
    <Podmiot1>
        <IdentyfikatorPodmiotu>
            <NIP>8943198563</NIP>
            <PelnaNazwa>COLOR PARTNER SPÓŁKA Z OGRANICZONĄ ODPOWIEDZIALNOŚCIĄ</PelnaNazwa>
            <REGON>523636760</REGON>
        </IdentyfikatorPodmiotu>
        <AdresPodmiotu>
        <KodKraju>PL</KodKraju>
        <Wojewodztwo>Dolnośląskie</Wojewodztwo>
        <Powiat>Wrocław</Powiat>
        <Gmina>Wrocław</Gmina>
        <Ulica>GRABISZYŃSKA</Ulica>
        <NrDomu>214</NrDomu>
        <NrLokalu>7</NrLokalu>
        <Miejscowosc>Wrocław</Miejscowosc>
        <KodPocztowy>53-235</KodPocztowy>
        <Poczta>Wrocław</Poczta>
    </AdresPodmiotu>
            </Podmiot1>
    `;
    sprzedazSnapshot.forEach(doc => {
        const data = doc.data();
        xml += `
            <SprzedazWiersz>
                <NrKontrahenta>${data.nip}</NrKontrahenta>
                <NazwaKontrahenta>${data.companyName}</NazwaKontrahenta>
                <AdresKontrahenta>${data.address}</AdresKontrahenta>
                <DowodSprzedazy>${data.numerfaktury}</DowodSprzedazy>
                <DataWystawienia>${data.purchaseDate}</DataWystawienia>
                <K_19>${data.netAmount}</K_19>
                <K_20>${data.vatAmount}</K_20>
            </SprzedazWiersz>
        `;
    });

    // Добавить каждую запись о покупке
    zakupSnapshot.forEach(doc => {
        const data = doc.data();
        xml += `
            <ZakupWiersz>
                <NrDostawcy>${data.nip}</NrDostawcy>
                <NazwaDostawcy>${data.companyName}</NazwaDostawcy>
                <AdresDostawcy>${data.address}</AdresDostawcy>
                <DowodZakupu>${data.numerfaktury}</DowodZakupu>
                <DataZakupu>${data.purchaseDate}</DataZakupu>
                <K_45>${data.netAmount}</K_45>
                <K_46>${data.vatAmount}</K_46>
            </ZakupWiersz>
        `;
    });

    xml += '</JPK>';

    return xml;
};
const saveXMLToStorage = async (xml, year, month) => {
    const storage = new Storage();

    // Определите путь к файлу в Firebase Storage
    const filePath = `jpk_reports/JPK_${year}_${month}.xml`;
    const bucketName = 'ccmcolorpartner.appspot.com'; // Название вашего бакета
    const bucket = storage.bucket(bucketName);
    const file = bucket.file(filePath);

    console.log(`Saving XML to ${filePath} in bucket ${bucketName}...`);

    // Загружаем XML в Firebase Storage
    await file.save(xml, {
        contentType: 'application/xml',
        public: true,
        metadata: {
            cacheControl: 'public, max-age=300',
        },
    });

    console.log(`File saved successfully at ${filePath}`);

    // Возвращает публичный URL файла
    return `https://storage.googleapis.com/${bucketName}/${filePath}`;
};